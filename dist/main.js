(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),l=t.n(a)()(r());l.push([e.id,"* {\n    margin: 0;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n.gridContainer {\n    display: grid;\n    grid-template-rows: 3fr 16fr 1fr;\n    grid-row: 1fr 5fr 1fr;\n    --color: brown;\n}\n.title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(65, 65, 197);\n}\n.body {\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    --color: red;\n\n}\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    display: grid;\n    background-color: rgb(65, 65, 197);\n}\n.sidebar {\n    /* padding: 20px; */\n    /* padding: 30px; */\n    gap: 50px;\n    display: grid;\n    background-color: rgb(189, 189, 200);\n}\n.sidebar div {\n    margin: 20px;\n}\n.todos {\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    /* padding: 20px; */\n}\n.todos div {\n    margin: 20px;\n\n}\n.list div:hover {\n    background-color: red;\n}\n.views div:hover {\n    background-color: red;\n}\n.projects div:hover {\n    background-color: red;\n\n}\n#myForm {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n  #myForm2 {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,gDAAgD;AACpD;AACA;IACI,aAAa;IACb,gCAAgC;IAChC,qBAAqB;IACrB,cAAc;AAClB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kCAAkC;AACtC;AACA;;IAEI,aAAa;IACb,8BAA8B;IAC9B,YAAY;;AAEhB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,kCAAkC;AACtC;AACA;IACI,mBAAmB;IACnB,mBAAmB;IACnB,SAAS;IACT,aAAa;IACb,oCAAoC;AACxC;AACA;IACI,YAAY;AAChB;AACA;IACI,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,YAAY;;AAEhB;AACA;IACI,qBAAqB;AACzB;AACA;IACI,qBAAqB;AACzB;AACA;IACI,qBAAqB;;AAEzB;AACA;IACI,mBAAmB;IACnB,aAAa;IACb,aAAa,EAAE,sBAAsB;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,YAAY,EAAE,uBAAuB;IACrC,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,wCAAwC,EAAE,qBAAqB;EACjE;EACA;IACE,mBAAmB;IACnB,aAAa;IACb,aAAa,EAAE,sBAAsB;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,YAAY,EAAE,uBAAuB;IACrC,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,wCAAwC,EAAE,qBAAqB;EACjE",sourcesContent:["* {\n    margin: 0;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n.gridContainer {\n    display: grid;\n    grid-template-rows: 3fr 16fr 1fr;\n    grid-row: 1fr 5fr 1fr;\n    --color: brown;\n}\n.title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(65, 65, 197);\n}\n.body {\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    --color: red;\n\n}\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    display: grid;\n    background-color: rgb(65, 65, 197);\n}\n.sidebar {\n    /* padding: 20px; */\n    /* padding: 30px; */\n    gap: 50px;\n    display: grid;\n    background-color: rgb(189, 189, 200);\n}\n.sidebar div {\n    margin: 20px;\n}\n.todos {\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    /* padding: 20px; */\n}\n.todos div {\n    margin: 20px;\n\n}\n.list div:hover {\n    background-color: red;\n}\n.views div:hover {\n    background-color: red;\n}\n.projects div:hover {\n    background-color: red;\n\n}\n#myForm {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n  #myForm2 {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n"],sourceRoot:""}]);const c=l},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(o)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(l[i]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);o&&l[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},l=[],c=0;c<e.length;c++){var i=e[c],s=o.base?i[0]+o.base:i[0],d=a[s]||0,A="".concat(s," ").concat(d);a[s]=d+1;var u=t(A),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var f=r(p,o);o.byIndex=c,n.splice(c,0,{identifier:A,updater:f,references:1})}l.push(A)}return l}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var l=0;l<a.length;l++){var c=t(a[l]);n[c].references--}for(var i=o(e,r),s=0;s<a.length;s++){var d=t(a[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=i}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),a=t(569),l=t.n(a),c=t(565),i=t.n(c),s=t(216),d=t.n(s),A=t(589),u=t.n(A),p=t(426),f={};f.styleTagTransform=u(),f.setAttributes=i(),f.insert=l().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;let m=[],C=[];const g=(e,n,t,o,r,a,l)=>({title:e,description:n,dueDate:t,priority:o,notes:a}),h=g("trash","take it out","9/2/2021","high"),y=g("eat","take it out","9/3/2021","high"),v=g("sleep","take it out","9/4/2021","high"),b=g("repeat","take it out","9/5/2021","high");console.log(m),m.push(h),m.push(y),m.push(v),m.push(b),console.log(m);const B=e=>({getTitle:()=>e});let I=()=>{let e=document.querySelectorAll("input");for(let n=0;n<e.length;n++)e[n].value="","submit"===e[n].className?e[n].value="+ New Todo":"submitProject"===e[n].className&&(e[n].value="+ New Project")},x=()=>{let e=new FormData(E),n={};for(let[t,o]of e.entries())n[t]=o,console.log(n[t]);m.push(n);const t=document.querySelector(".list"),o=document.createElement("div");return o.textContent=n.title,t.appendChild(o),document.querySelectorAll(".project").forEach((e=>{e.classList.contains("active")&&(console.log("The div is active"),console.log(e),console.log(e.textContent),n.project=e.textContent)})),n};const E=document.querySelector(".form");E.addEventListener("submit",(e=>{e.preventDefault();let n=x();document.getElementById("myForm").style.display="none",I(),console.log(n),console.log(C),console.log(m)}));const k=document.querySelector(".form2");k.addEventListener("submit",(function(e){e.preventDefault();let n=(()=>{let e=new FormData(k),n={};for(let[t,o]of e.entries())n[t]=o,console.log(n[t]);C.push(n);const t=document.querySelector(".projects"),o=document.createElement("div");o.textContent=n.title;let r=x();return console.log(r),n.project=n.title,o.className="project",t.appendChild(o),m.push(n),n})();document.getElementById("myForm2").style.display="none",I(),console.log(n),console.log(C)}));const w=document.querySelector(".newProject");document.querySelector(".taskText"),document.querySelector(".newTodo").addEventListener("click",(()=>{console.log("new todo"),document.getElementById("myForm").style.display="block"})),w.addEventListener("click",(()=>{console.log("testing"),document.getElementById("myForm2").style.display="block"})),B("school"),B("finance"),B("personal"),B("social");const S=document.querySelector(".list"),q=document.querySelector(".todosHeader");let j=()=>{let e=m;console.log(e),console.log("hi"),S.textContent="",q.textContent="All Tasks",S.appendChild(q),e.forEach((function(e,n){console.log(e.title);const t=document.createElement("div");t.textContent=e.title,S.appendChild(t)}))};j();let T=()=>{let e=m;return S.textContent="",q.textContent="Due this Week",S.appendChild(q),e.forEach((function(e,n){if(console.log(e.dueDate),"trash"===e.title){console.log(e.title),console.log("hello");const n=document.createElement("div");n.textContent=e.title,S.appendChild(n)}})),{showsTaskforWeek:T}};document.querySelector(".week").addEventListener("click",(()=>{T()})),document.querySelector(".home").addEventListener("click",(()=>{j()})),document.querySelector(".month").addEventListener("click",(()=>{(()=>{let e=m;S.textContent="",q.textContent="Due this Month",S.appendChild(q),e.forEach((function(e,n){if(console.log(e.dueDate),"fog"===e.title){console.log(e.title),console.log("hello");const n=document.createElement("div");n.textContent=e.title,S.appendChild(n)}}))})()})),document.querySelector(".today").addEventListener("click",(()=>{(()=>{let e=m;S.textContent="",q.textContent="Due Today",S.appendChild(q),e.forEach((function(e,n){if(console.log(e.dueDate),"boy"===e.title){console.log(e.title),console.log("hello");const n=document.createElement("div");n.textContent=e.title,S.appendChild(n)}}))})()})),document.querySelector(".projects").addEventListener("click",(function(e){e.target.matches(".project")&&document.querySelectorAll(".project").forEach((e=>{e.addEventListener("click",(()=>{(()=>{let e=m;S.textContent="",S.appendChild(q),e.forEach((function(e,n){if(console.log(e.dueDate),"fog"===e.project){const n=document.createElement("div");n.textContent=e.title,S.appendChild(n);let t=x();console.log(t)}})),console.log("working on it"),document.querySelectorAll(".project").forEach((e=>{e.classList.contains("active")&&(console.log("found one"),e.classList.remove("active"))}))})(),e.classList.add("active"),q.textContent=e.textContent}))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,