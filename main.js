(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>l});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([e.id,'* {\n    margin: 0;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n.gridContainer {\n    display: grid;\n    grid-template-rows: 3fr 16fr 1fr;\n    grid-row: 1fr 5fr 1fr;\n    --color: brown;\n}\n.title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(65, 65, 197);\n}\n.body {\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    --color: red;\n\n}\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    display: grid;\n    background-color: rgb(65, 65, 197);\n}\n.sidebar {\n    /* padding: 20px; */\n    /* padding: 30px; */\n    gap: 50px;\n    display: grid;\n    background-color: rgb(189, 189, 200);\n}\n.sidebar div {\n    margin: 20px;\n}\n.todos {\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    /* padding: 20px; */\n}\n.todos div {\n    margin: 20px;\n\n}\n/* .list div:hover {\n    background-color: red;\n}\n.views div:hover {\n    background-color: red;\n}\n.projects div:hover {\n    background-color: red;\n\n} */\n#myForm {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n  #myForm2 {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n  .todo {\n    display: grid;\n    grid-template-columns: .3fr 4fr 1fr 1fr 1fr;\n    grid-row: 1fr;\n    background-color: blue;\n  }\n.header {\n    background-color: pink;\n    display: grid;\n    grid-template-columns: 1.3fr 1fr;\n}\n.strikethrough {\n    position: relative;\n    display: grid;\n    grid-template-columns: .3fr 4fr 1fr 1fr 1fr;\n    grid-row: 1fr;\n    background-color: blue;\n    opacity: .5;\n  }\n\n  .strikethrough:before {\n    content: "";\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    border-top: 2px solid;\n    transform: translateY(-50%);\n  }\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,gDAAgD;AACpD;AACA;IACI,aAAa;IACb,gCAAgC;IAChC,qBAAqB;IACrB,cAAc;AAClB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kCAAkC;AACtC;AACA;;IAEI,aAAa;IACb,8BAA8B;IAC9B,YAAY;;AAEhB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,kCAAkC;AACtC;AACA;IACI,mBAAmB;IACnB,mBAAmB;IACnB,SAAS;IACT,aAAa;IACb,oCAAoC;AACxC;AACA;IACI,YAAY;AAChB;AACA;IACI,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,YAAY;;AAEhB;AACA;;;;;;;;;GASG;AACH;IACI,mBAAmB;IACnB,aAAa;IACb,aAAa,EAAE,sBAAsB;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,YAAY,EAAE,uBAAuB;IACrC,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,wCAAwC,EAAE,qBAAqB;EACjE;EACA;IACE,mBAAmB;IACnB,aAAa;IACb,aAAa,EAAE,sBAAsB;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,YAAY,EAAE,uBAAuB;IACrC,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,wCAAwC,EAAE,qBAAqB;EACjE;EACA;IACE,aAAa;IACb,2CAA2C;IAC3C,aAAa;IACb,sBAAsB;EACxB;AACF;IACI,sBAAsB;IACtB,aAAa;IACb,gCAAgC;AACpC;AACA;IACI,kBAAkB;IAClB,aAAa;IACb,2CAA2C;IAC3C,aAAa;IACb,sBAAsB;IACtB,WAAW;EACb;;EAEA;IACE,WAAW;IACX,kBAAkB;IAClB,QAAQ;IACR,OAAO;IACP,QAAQ;IACR,qBAAqB;IACrB,2BAA2B;EAC7B",sourcesContent:['* {\n    margin: 0;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n.gridContainer {\n    display: grid;\n    grid-template-rows: 3fr 16fr 1fr;\n    grid-row: 1fr 5fr 1fr;\n    --color: brown;\n}\n.title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(65, 65, 197);\n}\n.body {\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    --color: red;\n\n}\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    display: grid;\n    background-color: rgb(65, 65, 197);\n}\n.sidebar {\n    /* padding: 20px; */\n    /* padding: 30px; */\n    gap: 50px;\n    display: grid;\n    background-color: rgb(189, 189, 200);\n}\n.sidebar div {\n    margin: 20px;\n}\n.todos {\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    /* padding: 20px; */\n}\n.todos div {\n    margin: 20px;\n\n}\n/* .list div:hover {\n    background-color: red;\n}\n.views div:hover {\n    background-color: red;\n}\n.projects div:hover {\n    background-color: red;\n\n} */\n#myForm {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n  #myForm2 {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n  .todo {\n    display: grid;\n    grid-template-columns: .3fr 4fr 1fr 1fr 1fr;\n    grid-row: 1fr;\n    background-color: blue;\n  }\n.header {\n    background-color: pink;\n    display: grid;\n    grid-template-columns: 1.3fr 1fr;\n}\n.strikethrough {\n    position: relative;\n    display: grid;\n    grid-template-columns: .3fr 4fr 1fr 1fr 1fr;\n    grid-row: 1fr;\n    background-color: blue;\n    opacity: .5;\n  }\n\n  .strikethrough:before {\n    content: "";\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    border-top: 2px solid;\n    transform: translateY(-50%);\n  }\n'],sourceRoot:""}]);const l=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var l=0;l<this.length;l++){var d=this[l][0];null!=d&&(c[d]=!0)}for(var i=0;i<e.length;i++){var s=[].concat(e[i]);o&&c[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},c=[],l=0;l<e.length;l++){var d=e[l],i=o.base?d[0]+o.base:d[0],s=a[i]||0,A="".concat(i," ").concat(s);a[i]=s+1;var p=n(A),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=r(u,o);o.byIndex=l,t.splice(l,0,{identifier:A,updater:m,references:1})}c.push(A)}return c}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var l=n(a[c]);t[l].references--}for(var d=o(e,r),i=0;i<a.length;i++){var s=n(a[i]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),c=n.n(a),l=n(565),d=n.n(l),i=n(216),s=n.n(i),A=n(589),p=n.n(A),u=n(426),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=s(),t()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;let C=[],f=[];const g=(e,t,n,o,r,a,c)=>({title:e,description:t,dueDate:n,priority:o,notes:a}),h=g("trash","take it out","2022-06-10","high"),v=g("eat","take it out","9/3/2021","high"),y=g("sleep","take it out","9/4/2021","high"),b=g("repeat","take it out","9/5/2021","high");C.push(h),C.push(v),C.push(y),C.push(b);const E=e=>({getTitle:()=>e});let B=()=>{let e=document.querySelectorAll("input");for(let t=0;t<e.length;t++)e[t].value="","submit"===e[t].className?e[t].value="+ New Todo":"submitProject"===e[t].className&&(e[t].value="+ New Project")};const x=document.querySelector(".form");x.addEventListener("submit",(e=>{e.preventDefault();let t=(()=>{let e=new FormData(x),t={};for(let[n,o]of e.entries())t[n]=o,console.log(t[n]);C.push(t);const n=document.createElement("input");n.type="checkbox",n.name="group_name",n.value="radio_value";const o=document.createElement("div");o.textContent=t.title;const r=document.createElement("div");r.textContent=t.dueDate;const a=document.createElement("div");a.className="editBtn",a.textContent="edit";const c=document.createElement("div");c.className="deleteBtn",c.textContent="X",n.checked=!1;const l=document.querySelector(".list"),d=document.createElement("div");return d.className="todo",d.appendChild(n),d.appendChild(o),d.appendChild(r),d.appendChild(a),d.appendChild(c),l.appendChild(d),l.appendChild(d),N(),j(),T(),document.querySelectorAll(".project").forEach((e=>{e.classList.contains("active")&&(console.log("The div is active"),console.log(e),console.log(e.textContent),t.project=e.textContent)})),t})();document.getElementById("myForm").style.display="none",B(),console.log(t),console.log(f),console.log(C)}));const k=document.querySelector(".form2");k.addEventListener("submit",(function(e){e.preventDefault();let t=(()=>{let e=new FormData(k),t={};for(let[n,o]of e.entries())t[n]=o,console.log(t[n]);f.push(t);const n=document.querySelector(".projects"),o=document.createElement("div");return o.textContent=t.title,o.className="project",n.appendChild(o),t})();document.getElementById("myForm2").style.display="none",B(),console.log(t),console.log(f)}));const I=document.querySelector(".newProject");document.querySelector(".taskText"),document.querySelector(".newTodo").addEventListener("click",(()=>{console.log("new todo"),document.getElementById("myForm").style.display="block"})),I.addEventListener("click",(()=>{console.log("testing"),document.getElementById("myForm2").style.display="block"})),E("school"),E("finance"),E("personal"),E("social");const w=document.querySelector(".list"),S=document.querySelector(".todosHeader");let q=()=>{console.log("showTask"),w.textContent="",C.forEach((function(e,t){const n=document.createElement("input");n.type="checkbox";const o=document.createElement("div");o.textContent=e.title,o.class="title";const r=document.createElement("div");r.textContent=e.dueDate;const a=document.createElement("div");a.className="editBtn",a.textContent="edit";const c=document.createElement("div");c.className="deleteBtn",c.textContent="X";const l=document.querySelector(".list"),d=document.createElement("div");d.className="todo",d.appendChild(n),d.appendChild(o),d.appendChild(r),d.appendChild(a),d.appendChild(c),l.appendChild(d),N(),j(),T();const i=document.getElementsByClassName("todo");for(let t of i){const o=t.children[1];"yes"===e.complete&&e.title===o.textContent&&(console.log("strikeyes"),console.log({item:e}),console.log(C),console.log(o.textContent),console.log(o),console.log({divs:i}),console.log({div:t}),t.className="strikethrough",n.checked=!0)}}))},N=()=>{console.log("strike"),document.querySelectorAll('input[type="checkbox"]').forEach((e=>{e.addEventListener("change",(function(){const t=e.closest("div"),n=t.getElementsByTagName("div")[0],o=C.find((e=>e.title===n.textContent));e.checked?(console.log("Checkbox is checked"),console.log(t),t.className="strikethrough",o&&(o.complete="yes")):(t.className="todo",o.complete="no")}))}))},j=()=>{console.log("edittask"),document.querySelectorAll(".editBtn").forEach((e=>{e.addEventListener("click",(function(){const e=parentDiv.getElementsByTagName("div")[0];console.log(e);const t=C.find((t=>t.title===e.textContent));t?(console.log(t),document.querySelector(".form").getElementsByTagName("input")):console.log(`No match found for ${e.textContent}`)}))}))},T=()=>{console.log("deletetask"),document.querySelectorAll(".deleteBtn").forEach((e=>{e.addEventListener("click",(function(){const t=e.parentNode;t.parentNode.removeChild(t);const n=t.getElementsByTagName("div")[0],o=C.find((e=>e.title===n.textContent));o?(console.log(o),console.log(C),C.splice(o,1),console.log(C)):console.log(`No match found for ${n.textContent}`)}))}))};q();let D=()=>{let e=C;return w.textContent="",S.textContent="Due this Week",w.appendChild(S),e.forEach((function(e,t){if(console.log(e.dueDate),"trash"===e.title){const t=document.createElement("input");t.type="checkbox",t.name="group_name",t.value="radio_value";const n=document.createElement("div");n.textContent=e.title;const o=document.createElement("div");o.textContent=e.dueDate;const r=document.createElement("div");r.textContent="edit";const a=document.createElement("div");a.className="deleteBtn",a.textContent="X",t.checked=!1;const c=document.querySelector(".list"),l=document.createElement("div");l.className="todo",l.appendChild(t),l.appendChild(n),l.appendChild(o),l.appendChild(r),l.appendChild(a),c.appendChild(l),c.appendChild(l),N(),j(),T()}})),{showsTaskforWeek:D}};document.querySelector(".week").addEventListener("click",(()=>{D()})),document.querySelector(".home").addEventListener("click",(()=>{w.textContent="",S.textContent="All Tasks",w.appendChild(S),q()})),document.querySelector(".month").addEventListener("click",(()=>{(()=>{let e=C;w.textContent="",S.textContent="Completed Tasks",w.appendChild(S),e.forEach((function(e,t){if("yes"===e.complete){const t=document.createElement("input");t.type="checkbox",t.name="group_name",t.value="radio_value";const n=document.createElement("div");n.textContent=e.title;const o=document.createElement("div");o.textContent=e.dueDate;const r=document.createElement("div");r.className="editBtn",r.textContent="edit";const a=document.createElement("div");a.className="deleteBtn",a.textContent="X",t.checked=!1;const c=document.querySelector(".list"),l=document.createElement("div");l.className="todo",l.appendChild(t),l.appendChild(n),l.appendChild(o),l.appendChild(r),l.appendChild(a),c.appendChild(l),c.appendChild(l),N(),j(),T()}}))})()})),document.querySelector(".today").addEventListener("click",(()=>{(()=>{let e=C;w.textContent="",S.textContent="Due Today",w.appendChild(S),e.forEach((function(e,t){if(console.log(e.dueDate),"boy"===e.title){const t=document.createElement("input");t.type="checkbox",t.name="group_name",t.value="radio_value";const n=document.createElement("div");n.textContent=e.title;const o=document.createElement("div");o.textContent=e.dueDate;const r=document.createElement("div");r.textContent="edit";const a=document.createElement("div");a.textContent="X",t.checked=!1;const c=document.querySelector(".list"),l=document.createElement("div");l.className="todo",l.appendChild(t),l.appendChild(n),l.appendChild(o),l.appendChild(r),l.appendChild(a),c.appendChild(l),c.appendChild(l),N(),j(),T()}}))})()})),document.querySelector(".projects").addEventListener("click",(function(e){e.target.matches(".project")&&document.querySelectorAll(".project").forEach((e=>{e.addEventListener("click",(()=>{(()=>{let e=C;const t=document.querySelector(".active");w.textContent="",w.appendChild(S),e.forEach((function(e,n){if(e.project===t.textContent){const t=document.createElement("input");t.type="checkbox",t.name="group_name",t.value="radio_value";const n=document.createElement("div");n.textContent=e.title;const o=document.createElement("div");o.textContent=e.dueDate;const r=document.createElement("div");r.textContent="edit";const a=document.createElement("div");a.className="deleteBtn",a.textContent="X",t.checked=!1;const c=document.querySelector(".list"),l=document.createElement("div");l.className="todo",l.appendChild(t),l.appendChild(n),l.appendChild(o),l.appendChild(r),l.appendChild(a),c.appendChild(l),c.appendChild(l)}})),document.querySelectorAll(".project").forEach((e=>{e.classList.contains("active")&&e.classList.remove("active")}))})(),e.classList.add("active"),console.log(e),S.textContent=e.textContent}))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,