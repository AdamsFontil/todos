(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>l});var o=t(537),r=t.n(o),a=t(645),c=t.n(a)()(r());c.push([e.id,"* {\n    margin: 0;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n.gridContainer {\n    display: grid;\n    grid-template-rows: 3fr 16fr 1fr;\n    grid-row: 1fr 5fr 1fr;\n    --color: brown;\n}\n.title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(65, 65, 197);\n}\n.body {\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    --color: red;\n\n}\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    display: grid;\n    background-color: rgb(65, 65, 197);\n}\n.sidebar {\n    /* padding: 20px; */\n    /* padding: 30px; */\n    gap: 50px;\n    display: grid;\n    background-color: rgb(189, 189, 200);\n}\n.sidebar div {\n    margin: 20px;\n}\n.todos {\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    /* padding: 20px; */\n}\n.todos div {\n    margin: 20px;\n\n}\n.list div:hover {\n    background-color: red;\n}\n.views div:hover {\n    background-color: red;\n}\n.projects div:hover {\n    background-color: red;\n\n}\n#myForm {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n  #myForm2 {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,gDAAgD;AACpD;AACA;IACI,aAAa;IACb,gCAAgC;IAChC,qBAAqB;IACrB,cAAc;AAClB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kCAAkC;AACtC;AACA;;IAEI,aAAa;IACb,8BAA8B;IAC9B,YAAY;;AAEhB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,kCAAkC;AACtC;AACA;IACI,mBAAmB;IACnB,mBAAmB;IACnB,SAAS;IACT,aAAa;IACb,oCAAoC;AACxC;AACA;IACI,YAAY;AAChB;AACA;IACI,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,YAAY;;AAEhB;AACA;IACI,qBAAqB;AACzB;AACA;IACI,qBAAqB;AACzB;AACA;IACI,qBAAqB;;AAEzB;AACA;IACI,mBAAmB;IACnB,aAAa;IACb,aAAa,EAAE,sBAAsB;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,YAAY,EAAE,uBAAuB;IACrC,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,wCAAwC,EAAE,qBAAqB;EACjE;EACA;IACE,mBAAmB;IACnB,aAAa;IACb,aAAa,EAAE,sBAAsB;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,YAAY,EAAE,uBAAuB;IACrC,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,wCAAwC,EAAE,qBAAqB;EACjE",sourcesContent:["* {\n    margin: 0;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n.gridContainer {\n    display: grid;\n    grid-template-rows: 3fr 16fr 1fr;\n    grid-row: 1fr 5fr 1fr;\n    --color: brown;\n}\n.title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(65, 65, 197);\n}\n.body {\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    --color: red;\n\n}\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    display: grid;\n    background-color: rgb(65, 65, 197);\n}\n.sidebar {\n    /* padding: 20px; */\n    /* padding: 30px; */\n    gap: 50px;\n    display: grid;\n    background-color: rgb(189, 189, 200);\n}\n.sidebar div {\n    margin: 20px;\n}\n.todos {\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    /* padding: 20px; */\n}\n.todos div {\n    margin: 20px;\n\n}\n.list div:hover {\n    background-color: red;\n}\n.views div:hover {\n    background-color: red;\n}\n.projects div:hover {\n    background-color: red;\n\n}\n#myForm {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n  #myForm2 {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n"],sourceRoot:""}]);const l=c},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var l=0;l<this.length;l++){var i=this[l][0];null!=i&&(c[i]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);o&&c[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},c=[],l=0;l<e.length;l++){var i=e[l],s=o.base?i[0]+o.base:i[0],d=a[s]||0,A="".concat(s," ").concat(d);a[s]=d+1;var u=t(A),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var f=r(p,o);o.byIndex=l,n.splice(l,0,{identifier:A,updater:f,references:1})}c.push(A)}return c}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var l=t(a[c]);n[l].references--}for(var i=o(e,r),s=0;s<a.length;s++){var d=t(a[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=i}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),a=t(569),c=t.n(a),l=t(565),i=t.n(l),s=t(216),d=t.n(s),A=t(589),u=t.n(A),p=t(426),f={};f.styleTagTransform=u(),f.setAttributes=i(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;let m=[],C=[];const g=(e,n,t,o,r,a,c)=>({title:e,description:n,dueDate:t,priority:o,notes:a}),h=g("trash","take it out","9/2/2021","high"),v=g("eat","take it out","9/3/2021","high"),y=g("sleep","take it out","9/4/2021","high"),b=g("repeat","take it out","9/5/2021","high");m.push(h),m.push(v),m.push(y),m.push(b);const B=e=>({getTitle:()=>e});let I=()=>{let e=document.querySelectorAll("input");for(let n=0;n<e.length;n++)e[n].value="","submit"===e[n].className?e[n].value="+ New Todo":"submitProject"===e[n].className&&(e[n].value="+ New Project")},x=()=>{let e=new FormData(E),n={};for(let[t,o]of e.entries())n[t]=o,console.log(n[t]);m.push(n);const t=document.querySelector(".list"),o=document.createElement("div");return o.textContent=n.title,t.appendChild(o),document.querySelectorAll(".project").forEach((e=>{e.classList.contains("active")&&(console.log("The div is active"),console.log(e),console.log(e.textContent),n.project=e.textContent)})),n};const E=document.querySelector(".form");E.addEventListener("submit",(e=>{e.preventDefault();let n=x();document.getElementById("myForm").style.display="none",I(),console.log(n),console.log(C),console.log(m)}));const k=document.querySelector(".form2");k.addEventListener("submit",(function(e){e.preventDefault();let n=(()=>{let e=new FormData(k),n={};for(let[t,o]of e.entries())n[t]=o,console.log(n[t]);C.push(n);const t=document.querySelector(".projects"),o=document.createElement("div");o.textContent=n.title;let r=x();return console.log(r),n.project=n.title,o.className="project",t.appendChild(o),m.push(n),n})();document.getElementById("myForm2").style.display="none",I(),console.log(n),console.log(C)}));const w=document.querySelector(".newProject");document.querySelector(".taskText"),document.querySelector(".newTodo").addEventListener("click",(()=>{console.log("new todo"),document.getElementById("myForm").style.display="block"})),w.addEventListener("click",(()=>{console.log("testing"),document.getElementById("myForm2").style.display="block"})),B("school"),B("finance"),B("personal"),B("social");const S=document.querySelector(".list"),j=document.querySelector(".todosHeader");let q=()=>{let e=m;S.textContent="",j.textContent="All Tasks",S.appendChild(j),e.forEach((function(e,n){const t=document.createElement("div");t.textContent=e.title,S.appendChild(t)}))};q();let T=()=>{let e=m;return S.textContent="",j.textContent="Due this Week",S.appendChild(j),e.forEach((function(e,n){if(console.log(e.dueDate),"trash"===e.title){console.log(e.title),console.log("hello");const n=document.createElement("div");n.textContent=e.title,S.appendChild(n)}})),{showsTaskforWeek:T}};document.querySelector(".week").addEventListener("click",(()=>{T()})),document.querySelector(".home").addEventListener("click",(()=>{q()})),document.querySelector(".month").addEventListener("click",(()=>{(()=>{let e=m;S.textContent="",j.textContent="Due this Month",S.appendChild(j),e.forEach((function(e,n){if(console.log(e.dueDate),"fog"===e.title){console.log(e.title),console.log("hello");const n=document.createElement("div");n.textContent=e.title,S.appendChild(n)}}))})()})),document.querySelector(".today").addEventListener("click",(()=>{(()=>{let e=m;S.textContent="",j.textContent="Due Today",S.appendChild(j),e.forEach((function(e,n){if(console.log(e.dueDate),"boy"===e.title){console.log(e.title),console.log("hello");const n=document.createElement("div");n.textContent=e.title,S.appendChild(n)}}))})()})),document.querySelector(".projects").addEventListener("click",(function(e){e.target.matches(".project")&&document.querySelectorAll(".project").forEach((e=>{e.addEventListener("click",(()=>{(()=>{let e=m;const n=document.querySelector(".active");S.textContent="",S.appendChild(j),e.forEach((function(e,t){if(e.project===n.textContent){console.log(e.project);const n=document.createElement("div");n.textContent=e.title,S.appendChild(n),console.log("adding todo with projectname")}})),console.log("working on it"),document.querySelectorAll(".project").forEach((e=>{e.classList.contains("active")&&(console.log("found one"),e.classList.remove("active"))}))})(),e.classList.add("active"),console.log(e),j.textContent=e.textContent,"project active"===e.className&&console.log("true")})),console.log("hello parent")}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUksZUFBYyxHQVM1QixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb3MvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG9zLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2Rvcy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG9zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG9zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2Rvcy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2Rvcy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2Rvcy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG9zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kb3Mvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kb3Mvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kb3Mvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG9zL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kb3Mvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG9zLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvZG9zLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEdlbmV2YSwgVGFob21hLCBzYW5zLXNlcmlmO1xcbn1cXG4uZ3JpZENvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogM2ZyIDE2ZnIgMWZyO1xcbiAgICBncmlkLXJvdzogMWZyIDVmciAxZnI7XFxuICAgIC0tY29sb3I6IGJyb3duO1xcbn1cXG4udGl0bGUge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDY1LCA2NSwgMTk3KTtcXG59XFxuLmJvZHkge1xcblxcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA0ZnI7XFxuICAgIC0tY29sb3I6IHJlZDtcXG5cXG59XFxuLmZvb3RlciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNjUsIDY1LCAxOTcpO1xcbn1cXG4uc2lkZWJhciB7XFxuICAgIC8qIHBhZGRpbmc6IDIwcHg7ICovXFxuICAgIC8qIHBhZGRpbmc6IDMwcHg7ICovXFxuICAgIGdhcDogNTBweDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE4OSwgMTg5LCAyMDApO1xcbn1cXG4uc2lkZWJhciBkaXYge1xcbiAgICBtYXJnaW46IDIwcHg7XFxufVxcbi50b2RvcyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICAvKiBwYWRkaW5nOiAyMHB4OyAqL1xcbn1cXG4udG9kb3MgZGl2IHtcXG4gICAgbWFyZ2luOiAyMHB4O1xcblxcbn1cXG4ubGlzdCBkaXY6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcbi52aWV3cyBkaXY6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcbi5wcm9qZWN0cyBkaXY6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxuXFxufVxcbiNteUZvcm0ge1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBwYWRkaW5nOiA0MHB4O1xcbiAgICBkaXNwbGF5OiBub25lOyAvKiBoaWRkZW4gYnkgZGVmYXVsdCAqL1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7IC8qIHN0YXkgaW4gcGxhY2UgKi9cXG4gICAgei1pbmRleDogMTsgLyogc2l0IG9uIHRvcCAqL1xcbiAgICB3aWR0aDogNjAwcHg7IC8qIHNldCB0aGUgZm9ybSB3aWR0aCAqL1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogNDAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgICBvdmVyZmxvdzogYXV0bzsgLyogZW5hYmxlIHNjcm9sbCBpZiBuZWVkZWQgKi9cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsMCwwKTsgLyogZmFsbGJhY2sgY29sb3IgKi9cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMSwgNTQsIDIyNSwgMC40KTsgLyogYmxhY2sgdy8gb3BhY2l0eSAqL1xcbiAgfVxcbiAgI215Rm9ybTIge1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBwYWRkaW5nOiA0MHB4O1xcbiAgICBkaXNwbGF5OiBub25lOyAvKiBoaWRkZW4gYnkgZGVmYXVsdCAqL1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7IC8qIHN0YXkgaW4gcGxhY2UgKi9cXG4gICAgei1pbmRleDogMTsgLyogc2l0IG9uIHRvcCAqL1xcbiAgICB3aWR0aDogNjAwcHg7IC8qIHNldCB0aGUgZm9ybSB3aWR0aCAqL1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogNDAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgICBvdmVyZmxvdzogYXV0bzsgLyogZW5hYmxlIHNjcm9sbCBpZiBuZWVkZWQgKi9cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsMCwwKTsgLyogZmFsbGJhY2sgY29sb3IgKi9cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMSwgNTQsIDIyNSwgMC40KTsgLyogYmxhY2sgdy8gb3BhY2l0eSAqL1xcbiAgfVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxTQUFTO0lBQ1QsZ0RBQWdEO0FBQ3BEO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsZ0NBQWdDO0lBQ2hDLHFCQUFxQjtJQUNyQixjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixrQ0FBa0M7QUFDdEM7QUFDQTs7SUFFSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLFlBQVk7O0FBRWhCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2Isa0NBQWtDO0FBQ3RDO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLFNBQVM7SUFDVCxhQUFhO0lBQ2Isb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSx1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLFlBQVk7O0FBRWhCO0FBQ0E7SUFDSSxxQkFBcUI7QUFDekI7QUFDQTtJQUNJLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0kscUJBQXFCOztBQUV6QjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixhQUFhLEVBQUUsc0JBQXNCO0lBQ3JDLGVBQWUsRUFBRSxrQkFBa0I7SUFDbkMsVUFBVSxFQUFFLGVBQWU7SUFDM0IsWUFBWSxFQUFFLHVCQUF1QjtJQUNyQyxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQ0FBZ0M7SUFDaEMsY0FBYyxFQUFFLDRCQUE0QjtJQUM1Qyw0QkFBNEIsRUFBRSxtQkFBbUI7SUFDakQsd0NBQXdDLEVBQUUscUJBQXFCO0VBQ2pFO0VBQ0E7SUFDRSxtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLGFBQWEsRUFBRSxzQkFBc0I7SUFDckMsZUFBZSxFQUFFLGtCQUFrQjtJQUNuQyxVQUFVLEVBQUUsZUFBZTtJQUMzQixZQUFZLEVBQUUsdUJBQXVCO0lBQ3JDLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsU0FBUztJQUNULGdDQUFnQztJQUNoQyxjQUFjLEVBQUUsNEJBQTRCO0lBQzVDLDRCQUE0QixFQUFFLG1CQUFtQjtJQUNqRCx3Q0FBd0MsRUFBRSxxQkFBcUI7RUFDakVcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEdlbmV2YSwgVGFob21hLCBzYW5zLXNlcmlmO1xcbn1cXG4uZ3JpZENvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogM2ZyIDE2ZnIgMWZyO1xcbiAgICBncmlkLXJvdzogMWZyIDVmciAxZnI7XFxuICAgIC0tY29sb3I6IGJyb3duO1xcbn1cXG4udGl0bGUge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDY1LCA2NSwgMTk3KTtcXG59XFxuLmJvZHkge1xcblxcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA0ZnI7XFxuICAgIC0tY29sb3I6IHJlZDtcXG5cXG59XFxuLmZvb3RlciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNjUsIDY1LCAxOTcpO1xcbn1cXG4uc2lkZWJhciB7XFxuICAgIC8qIHBhZGRpbmc6IDIwcHg7ICovXFxuICAgIC8qIHBhZGRpbmc6IDMwcHg7ICovXFxuICAgIGdhcDogNTBweDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE4OSwgMTg5LCAyMDApO1xcbn1cXG4uc2lkZWJhciBkaXYge1xcbiAgICBtYXJnaW46IDIwcHg7XFxufVxcbi50b2RvcyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICAvKiBwYWRkaW5nOiAyMHB4OyAqL1xcbn1cXG4udG9kb3MgZGl2IHtcXG4gICAgbWFyZ2luOiAyMHB4O1xcblxcbn1cXG4ubGlzdCBkaXY6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcbi52aWV3cyBkaXY6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcbi5wcm9qZWN0cyBkaXY6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxuXFxufVxcbiNteUZvcm0ge1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBwYWRkaW5nOiA0MHB4O1xcbiAgICBkaXNwbGF5OiBub25lOyAvKiBoaWRkZW4gYnkgZGVmYXVsdCAqL1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7IC8qIHN0YXkgaW4gcGxhY2UgKi9cXG4gICAgei1pbmRleDogMTsgLyogc2l0IG9uIHRvcCAqL1xcbiAgICB3aWR0aDogNjAwcHg7IC8qIHNldCB0aGUgZm9ybSB3aWR0aCAqL1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogNDAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgICBvdmVyZmxvdzogYXV0bzsgLyogZW5hYmxlIHNjcm9sbCBpZiBuZWVkZWQgKi9cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsMCwwKTsgLyogZmFsbGJhY2sgY29sb3IgKi9cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMSwgNTQsIDIyNSwgMC40KTsgLyogYmxhY2sgdy8gb3BhY2l0eSAqL1xcbiAgfVxcbiAgI215Rm9ybTIge1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBwYWRkaW5nOiA0MHB4O1xcbiAgICBkaXNwbGF5OiBub25lOyAvKiBoaWRkZW4gYnkgZGVmYXVsdCAqL1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7IC8qIHN0YXkgaW4gcGxhY2UgKi9cXG4gICAgei1pbmRleDogMTsgLyogc2l0IG9uIHRvcCAqL1xcbiAgICB3aWR0aDogNjAwcHg7IC8qIHNldCB0aGUgZm9ybSB3aWR0aCAqL1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogNDAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgICBvdmVyZmxvdzogYXV0bzsgLyogZW5hYmxlIHNjcm9sbCBpZiBuZWVkZWQgKi9cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsMCwwKTsgLyogZmFsbGJhY2sgY29sb3IgKi9cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMSwgNTQsIDIyNSwgMC40KTsgLyogYmxhY2sgdy8gb3BhY2l0eSAqL1xcbiAgfVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG4vLyBjb25zdCB0b2Rvc0xpc3QgPSAoKCkgPT4ge1xuLy8gICAgIGxldCB0b2RvSXRlbXMgPSBbXVxuLy8gICAgIHJldHVybiB7XG4vLyAgICAgICAgIHRvZG9JdGVtc1xuLy8gICAgIH1cbi8vIH0pKClcblxubGV0IHRvZG9JdGVtcyA9IFtdO1xubGV0IGFsbFByb2plY3RzID0gW107XG5cbmNvbnN0IHRvZG9GYWN0b3J5ID0gKCh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LHByb2plY3QsIG5vdGVzLGNvbXBsZXRlKSA9PiB7XG50aXRsZSxcbmRlc2NyaXB0aW9uLFxuZHVlRGF0ZSxcbnByaW9yaXR5LFxucHJvamVjdCxcbm5vdGVzLFxuY29tcGxldGVcbnJldHVybiB7XG4gICAgdGl0bGUsXG4gICAgZGVzY3JpcHRpb24sXG4gICAgZHVlRGF0ZSxcbiAgICBwcmlvcml0eSxcbiAgICBub3Rlc1xufVxufSlcblxuY29uc3QgdGFzazEgPSB0b2RvRmFjdG9yeSAoJ3RyYXNoJywgJ3Rha2UgaXQgb3V0JywgJzkvMi8yMDIxJywgJ2hpZ2gnLCAndGVzdGluZycpXG5jb25zdCB0YXNrMiA9IHRvZG9GYWN0b3J5ICgnZWF0JywgJ3Rha2UgaXQgb3V0JywgJzkvMy8yMDIxJywgJ2hpZ2gnLCAndGVzdGluZycpXG5jb25zdCB0YXNrMyA9IHRvZG9GYWN0b3J5ICgnc2xlZXAnLCAndGFrZSBpdCBvdXQnLCAnOS80LzIwMjEnLCAnaGlnaCcsICd0ZXN0aW5nJylcbmNvbnN0IHRhc2s0ID0gdG9kb0ZhY3RvcnkgKCdyZXBlYXQnLCAndGFrZSBpdCBvdXQnLCAnOS81LzIwMjEnLCAnaGlnaCcsICd0ZXN0aW5nJylcbi8vIGNvbnNvbGUubG9nKHRvZG9zTGlzdClcbi8vIGNvbnNvbGUubG9nKHRvZG9JdGVtcylcbnRvZG9JdGVtcy5wdXNoKHRhc2sxKVxudG9kb0l0ZW1zLnB1c2godGFzazIpXG50b2RvSXRlbXMucHVzaCh0YXNrMylcbnRvZG9JdGVtcy5wdXNoKHRhc2s0KVxuLy8gY29uc29sZS5sb2codG9kb3NMaXN0KVxuLy8gY29uc29sZS5sb2codG9kb0l0ZW1zKVxuXG5cbmNvbnN0IG1ha2VQcm9qZWN0ID0gKCAodGl0bGUpID0+IHtcbiAgICB0aXRsZVxuICAgIHJldHVybiB7XG4gICAgICAgIGdldFRpdGxlOiAoKSA9PiB0aXRsZSxcbiAgICB9XG59KVxuXG5sZXQgc2hvd0Zvcm0gPSAoKSA9PiB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJteUZvcm1cIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgfVxubGV0IGhpZGVGb3JtID0gKCkgPT4ge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlGb3JtXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgfVxuICBsZXQgc2hvd0Zvcm0yID0gKCkgPT4ge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlGb3JtMlwiKS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICB9XG5sZXQgaGlkZUZvcm0yID0gKCkgPT4ge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlGb3JtMlwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIH1cblxuICBsZXQgY2xlYXJGb3JtID0gKCkgPT4ge1xuICAgIGxldCBpbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRcIik7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlucHV0c1tpXS52YWx1ZSA9IFwiXCJcbiAgICAgIGlmIChpbnB1dHNbaV0uY2xhc3NOYW1lID09PSAnc3VibWl0Jykge1xuICAgICAgICBpbnB1dHNbaV0udmFsdWUgPSAnKyBOZXcgVG9kbydcbiAgICAgIH0gZWxzZSBpZiAoaW5wdXRzW2ldLmNsYXNzTmFtZSA9PT0gJ3N1Ym1pdFByb2plY3QnKSB7XG4gICAgICAgIGlucHV0c1tpXS52YWx1ZSA9ICcrIE5ldyBQcm9qZWN0J1xuICAgICAgfVxuXG59XG4gIH1cbiAgbGV0IGFkZEZvcm1JbnB1dHMgPSAoKSA9PiB7XG4gICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKGZvcm0pO1xuICAgIGxldCB0b2RvRmFjdG9yeTIgPSB7fTtcbiAgICBmb3IgKGxldCBba2V5LCB2YWx1ZV0gb2YgZm9ybURhdGEuZW50cmllcygpKSB7XG4gICAgICB0b2RvRmFjdG9yeTJba2V5XSA9IHZhbHVlO1xuICAgICAgY29uc29sZS5sb2codG9kb0ZhY3RvcnkyW2tleV0pXG4gICAgfVxuICAgIGlmIChhbGxQcm9qZWN0cykge1xuICAgICAgLy8gdG9kb0ZhY3RvcnkyLnByb2plY3QgPSAnTm90IFNwZWNpZmllZCdcbiAgICB9XG4gICAgdG9kb0l0ZW1zLnB1c2godG9kb0ZhY3RvcnkyKVxuICAgIGNvbnN0IGxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGlzdCcpXG4gICAgY29uc3QgdG9kbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICB0b2RvLnRleHRDb250ZW50ID0gdG9kb0ZhY3RvcnkyLnRpdGxlXG4gICAgICBsaXN0LmFwcGVuZENoaWxkKHRvZG8pXG5cbiAgY29uc3QgZGl2cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcm9qZWN0Jyk7XG4gIGRpdnMuZm9yRWFjaChkaXYgPT4ge1xuICAgICAgaWYgKGRpdi5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdUaGUgZGl2IGlzIGFjdGl2ZScpO1xuICAgICAgICBjb25zb2xlLmxvZyhkaXYpXG4gICAgICAgIGNvbnNvbGUubG9nKGRpdi50ZXh0Q29udGVudClcbiAgICAgICAgdG9kb0ZhY3RvcnkyLnByb2plY3QgPSBkaXYudGV4dENvbnRlbnRcbiAgICAgIC8vIH0gZWxzZSB7XG4gICAgICAvLyAgIGNvbnNvbGUubG9nKCdUaGUgZGl2IGlzIG5vdCBhY3RpdmUnKTtcbiAgICAgIC8vICAgdG9kb0ZhY3RvcnkyLnByb2plY3QgPSAnTm90IFNwZWNpZmllZCdcbiAgICAgICB9IH0pXG5cbiAgICByZXR1cm4gdG9kb0ZhY3RvcnkyO1xufVxubGV0IGFkZEZvcm0ySW5wdXRzID0gKCkgPT4ge1xuICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoZm9ybTIpO1xuICBsZXQgdG9kb0ZhY3RvcnkyID0ge307XG4gIGZvciAobGV0IFtrZXksIHZhbHVlXSBvZiBmb3JtRGF0YS5lbnRyaWVzKCkpIHtcbiAgICB0b2RvRmFjdG9yeTJba2V5XSA9IHZhbHVlO1xuICAgIGNvbnNvbGUubG9nKHRvZG9GYWN0b3J5MltrZXldKVxuICB9XG4gIGFsbFByb2plY3RzLnB1c2godG9kb0ZhY3RvcnkyKVxuICBjb25zdCBwcm9qZWN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0cycpXG4gIGNvbnN0IHByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgIHByb2plY3QudGV4dENvbnRlbnQgPSB0b2RvRmFjdG9yeTIudGl0bGVcbiAgICBsZXQgcmV0dXJuZWRUb2RvRmFjdG9yeTIgPSBhZGRGb3JtSW5wdXRzKCk7XG4gICAgY29uc29sZS5sb2cocmV0dXJuZWRUb2RvRmFjdG9yeTIpXG4gICAgdG9kb0ZhY3RvcnkyLnByb2plY3QgPSB0b2RvRmFjdG9yeTIudGl0bGVcblxuICAgIHByb2plY3QuY2xhc3NOYW1lID0gJ3Byb2plY3QnXG4gICAgcHJvamVjdHMuYXBwZW5kQ2hpbGQocHJvamVjdClcbiAgICB0b2RvSXRlbXMucHVzaCh0b2RvRmFjdG9yeTIpXG4gIHJldHVybiB0b2RvRmFjdG9yeTI7XG59XG5cbmNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybScpXG5mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBsZXQgcmV0dXJuZWRUb2RvRmFjdG9yeTIgPSBhZGRGb3JtSW5wdXRzKCk7XG4gIGhpZGVGb3JtKClcbiAgY2xlYXJGb3JtKClcbiAgY29uc29sZS5sb2cocmV0dXJuZWRUb2RvRmFjdG9yeTIpXG4gIGNvbnNvbGUubG9nKGFsbFByb2plY3RzKVxuICBjb25zb2xlLmxvZyh0b2RvSXRlbXMpXG59KVxuY29uc3QgZm9ybTIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybTInKVxuZm9ybTIuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBmdW5jdGlvbihldmVudCkge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBsZXQgcmV0dXJuZWRUb2RvRmFjdG9yeTIgPSBhZGRGb3JtMklucHV0cygpO1xuICBoaWRlRm9ybTIoKVxuICBjbGVhckZvcm0oKVxuICBjb25zb2xlLmxvZyhyZXR1cm5lZFRvZG9GYWN0b3J5MilcbiAgY29uc29sZS5sb2coYWxsUHJvamVjdHMpXG59KTtcblxuXG5jb25zdCBuZXdQcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5ld1Byb2plY3QnKVxuY29uc3QgdGFza1RleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFza1RleHQnKVxuY29uc3QgbmV3VG9kbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXdUb2RvJylcbm5ld1RvZG8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+IHtcbiAgICBjb25zb2xlLmxvZygnbmV3IHRvZG8nKVxuICAgIHNob3dGb3JtKClcbn0pXG5uZXdQcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PiB7XG4gICAgY29uc29sZS5sb2coJ3Rlc3RpbmcnKVxuICAgIHNob3dGb3JtMigpXG59KVxuY29uc3Qgc2Nob29sID0gbWFrZVByb2plY3QgKCdzY2hvb2wnKVxuY29uc3QgZmluYW5jZSA9IG1ha2VQcm9qZWN0ICgnZmluYW5jZScpXG5jb25zdCBwZXJzb25hbCA9IG1ha2VQcm9qZWN0ICgncGVyc29uYWwnKVxuY29uc3Qgc29jaWFsID0gbWFrZVByb2plY3QgKCdzb2NpYWwnKVxuXG5jb25zdCBsaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxpc3QnKVxuY29uc3QgdG9kb3NIZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kb3NIZWFkZXInKVxuXG5cbmxldCBzaG93VGFza3NPblBhZ2UgPSAoKSA9PiB7XG4gICAgbGV0IG15QXJyYXkgPSB0b2RvSXRlbXNcbiAgICAvLyBjb25zb2xlLmxvZyhteUFycmF5KVxuICAgIC8vIGNvbnNvbGUubG9nKCdoaScpXG4gICAgbGlzdC50ZXh0Q29udGVudCA9ICcnXG4gICAgdG9kb3NIZWFkZXIudGV4dENvbnRlbnQgPSAnQWxsIFRhc2tzJ1xuICAgIGxpc3QuYXBwZW5kQ2hpbGQodG9kb3NIZWFkZXIpXG5cbm15QXJyYXkuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuICAvLyBjb25zb2xlLmxvZyhpdGVtLnRpdGxlKTtcbmNvbnN0IHRvZG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICB0b2RvLnRleHRDb250ZW50ID0gaXRlbS50aXRsZVxuICBsaXN0LmFwcGVuZENoaWxkKHRvZG8pXG59KTtcbn1cbnNob3dUYXNrc09uUGFnZSgpXG5cbmxldCBzaG93c1Rhc2tmb3JXZWVrID0gKCkgPT4ge1xuICBsZXQgbXlBcnJheSA9IHRvZG9JdGVtc1xuICAgIGxpc3QudGV4dENvbnRlbnQgPSAnJ1xuICAgIHRvZG9zSGVhZGVyLnRleHRDb250ZW50ID0gJ0R1ZSB0aGlzIFdlZWsnXG4gICAgbGlzdC5hcHBlbmRDaGlsZCh0b2Rvc0hlYWRlcilcbm15QXJyYXkuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuICBjb25zb2xlLmxvZyhpdGVtLmR1ZURhdGUpO1xuICBpZiAoaXRlbS50aXRsZSA9PT0gJ3RyYXNoJykge1xuICAgIGNvbnNvbGUubG9nKGl0ZW0udGl0bGUpXG4gICAgY29uc29sZS5sb2coJ2hlbGxvJylcbiAgICBjb25zdCB0b2RvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgdG9kby50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGVcbiAgbGlzdC5hcHBlbmRDaGlsZCh0b2RvKVxuICB9XG59KTtcbnJldHVybiB7XG4gIHNob3dzVGFza2ZvcldlZWtcbn1cblxufVxuXG5sZXQgc2hvd3NUYXNrZm9yVG9kYXkgPSAoKSA9PiB7XG4gIGxldCBteUFycmF5ID0gdG9kb0l0ZW1zXG4gICAgbGlzdC50ZXh0Q29udGVudCA9ICcnXG4gICAgdG9kb3NIZWFkZXIudGV4dENvbnRlbnQgPSAnRHVlIFRvZGF5J1xuICAgIGxpc3QuYXBwZW5kQ2hpbGQodG9kb3NIZWFkZXIpXG5teUFycmF5LmZvckVhY2goZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcbiAgY29uc29sZS5sb2coaXRlbS5kdWVEYXRlKTtcbiAgaWYgKGl0ZW0udGl0bGUgPT09ICdib3knKSB7XG4gICAgY29uc29sZS5sb2coaXRlbS50aXRsZSlcbiAgICBjb25zb2xlLmxvZygnaGVsbG8nKVxuICAgIGNvbnN0IHRvZG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICB0b2RvLnRleHRDb250ZW50ID0gaXRlbS50aXRsZVxuICBsaXN0LmFwcGVuZENoaWxkKHRvZG8pXG4gIH1cbn0pO1xuXG59XG5cbmxldCBzaG93c1Rhc2tmb3JNb250aCA9ICgpID0+IHtcbiAgbGV0IG15QXJyYXkgPSB0b2RvSXRlbXNcbiAgICBsaXN0LnRleHRDb250ZW50ID0gJydcbiAgICB0b2Rvc0hlYWRlci50ZXh0Q29udGVudCA9ICdEdWUgdGhpcyBNb250aCdcbiAgICBsaXN0LmFwcGVuZENoaWxkKHRvZG9zSGVhZGVyKVxubXlBcnJheS5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XG4gIGNvbnNvbGUubG9nKGl0ZW0uZHVlRGF0ZSk7XG4gIGlmIChpdGVtLnRpdGxlID09PSAnZm9nJykge1xuICAgIGNvbnNvbGUubG9nKGl0ZW0udGl0bGUpXG4gICAgY29uc29sZS5sb2coJ2hlbGxvJylcbiAgICBjb25zdCB0b2RvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgdG9kby50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGVcbiAgbGlzdC5hcHBlbmRDaGlsZCh0b2RvKVxuXG4gIH1cbn0pO1xufVxuXG5sZXQgc2hvd3NUYXNrZm9yUHJvamVjdCA9ICgpID0+IHtcbiAgbGV0IG15QXJyYXkgPSB0b2RvSXRlbXNcbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFjdGl2ZScpXG4gICAgbGlzdC50ZXh0Q29udGVudCA9ICcnXG4gICAgbGlzdC5hcHBlbmRDaGlsZCh0b2Rvc0hlYWRlcilcbm15QXJyYXkuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuXG4gIGlmIChpdGVtLnByb2plY3QgPT09IGRpdi50ZXh0Q29udGVudCkge1xuICAgIGNvbnNvbGUubG9nKGl0ZW0ucHJvamVjdCk7XG4gICAgLy8gY29uc29sZS5sb2coJ2hlbGxvJylcbiAgICBjb25zdCB0b2RvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgdG9kby50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGVcbiAgbGlzdC5hcHBlbmRDaGlsZCh0b2RvKVxuICAvLyBsZXQgcmV0dXJuZWRUb2RvRmFjdG9yeTIgPSBhZGRGb3JtSW5wdXRzKCk7XG4gIC8vIGNvbnNvbGUubG9nKHJldHVybmVkVG9kb0ZhY3RvcnkyKVxuICBjb25zb2xlLmxvZygnYWRkaW5nIHRvZG8gd2l0aCBwcm9qZWN0bmFtZScpXG4gIH1cbn0pO1xuY29uc29sZS5sb2coJ3dvcmtpbmcgb24gaXQnKVxuY29uc3QgZGl2cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcm9qZWN0Jyk7XG4gIGRpdnMuZm9yRWFjaChkaXYgPT4ge1xuICAgICAgaWYgKGRpdi5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7XG4gIGNvbnNvbGUubG9nKCdmb3VuZCBvbmUnKVxuICBkaXYuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJylcbn0gfSlcblxuXG5cbn1cblxuXG5jb25zdCB3ZWVrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndlZWsnKVxud2Vlay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgc2hvd3NUYXNrZm9yV2VlaygpXG59KVxuY29uc3QgaG9tZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ob21lJylcbmhvbWUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIHNob3dUYXNrc09uUGFnZSgpXG59KVxuY29uc3QgbW9udGggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9udGgnKVxubW9udGguYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIHNob3dzVGFza2Zvck1vbnRoKClcbn0pXG5jb25zdCB0b2RheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RheScpXG50b2RheS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgc2hvd3NUYXNrZm9yVG9kYXkoKVxufSlcblxuXG4vLyBjb25zdCBwcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnByb2plY3QnKVxuXG5cblxuXG5jb25zdCBwYXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdHMnKTtcblxuXG5wYXJlbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuICBpZiAoZXZlbnQudGFyZ2V0Lm1hdGNoZXMoJy5wcm9qZWN0JykpIHtcbiAgICBjb25zdCBkaXZzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnByb2plY3QnKTtcbiAgZGl2cy5mb3JFYWNoKGRpdiA9PiB7XG4gIGRpdi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+XG4gIHtcbiAgICBzaG93c1Rhc2tmb3JQcm9qZWN0KClcbiAgICBkaXYuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgY29uc29sZS5sb2coZGl2KVxuICAgIHRvZG9zSGVhZGVyLnRleHRDb250ZW50ID0gZGl2LnRleHRDb250ZW50XG4gICAgaWYgKGRpdi5jbGFzc05hbWUgPT09ICdwcm9qZWN0IGFjdGl2ZScpIHtcbiAgICAgIGNvbnNvbGUubG9nKCd0cnVlJylcbiAgICB9XG5cblxuICB9KTtcblxuICBjb25zb2xlLmxvZygnaGVsbG8gcGFyZW50JylcbiAgLy8gbGV0IHJldHVybmVkVG9kb0ZhY3RvcnkyID0gYWRkRm9ybUlucHV0cygpO1xuICAvLyBjb25zb2xlLmxvZyhyZXR1cm5lZFRvZG9GYWN0b3J5MilcblxuICAvLyBjb25zb2xlLmxvZyh0b2RvRmFjdG9yeTIpXG59KTtcblxuXG4gIH1cbn0pO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsInRvZG9JdGVtcyIsImFsbFByb2plY3RzIiwidG9kb0ZhY3RvcnkiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsInByaW9yaXR5IiwicHJvamVjdCIsIm5vdGVzIiwiY29tcGxldGUiLCJ0YXNrMSIsInRhc2syIiwidGFzazMiLCJ0YXNrNCIsIm1ha2VQcm9qZWN0IiwiZ2V0VGl0bGUiLCJjbGVhckZvcm0iLCJpbnB1dHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwidmFsdWUiLCJjbGFzc05hbWUiLCJhZGRGb3JtSW5wdXRzIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsInRvZG9GYWN0b3J5MiIsImVudHJpZXMiLCJjb25zb2xlIiwibG9nIiwidG9kbyIsInRleHRDb250ZW50IiwiZm9yRWFjaCIsImRpdiIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJyZXR1cm5lZFRvZG9GYWN0b3J5MiIsImdldEVsZW1lbnRCeUlkIiwiZGlzcGxheSIsImZvcm0yIiwicHJvamVjdHMiLCJhZGRGb3JtMklucHV0cyIsIm5ld1Byb2plY3QiLCJ0b2Rvc0hlYWRlciIsInNob3dUYXNrc09uUGFnZSIsIm15QXJyYXkiLCJzaG93c1Rhc2tmb3JXZWVrIiwic2hvd3NUYXNrZm9yTW9udGgiLCJzaG93c1Rhc2tmb3JUb2RheSIsIm1hdGNoZXMiLCJzaG93c1Rhc2tmb3JQcm9qZWN0IiwiYWRkIl0sInNvdXJjZVJvb3QiOiIifQ==