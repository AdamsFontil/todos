(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([e.id,"* {\n    margin: 0;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n.gridContainer {\n    display: grid;\n    grid-template-rows: 3fr 16fr 1fr;\n    grid-row: 1fr 5fr 1fr;\n    --color: brown;\n}\n.title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(65, 65, 197);\n}\n.body {\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    --color: red;\n\n}\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    display: grid;\n    background-color: rgb(65, 65, 197);\n}\n.sidebar {\n    /* padding: 20px; */\n    /* padding: 30px; */\n    gap: 50px;\n    display: grid;\n    background-color: rgb(189, 189, 200);\n}\n.sidebar div {\n    margin: 20px;\n}\n.todos {\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    /* padding: 20px; */\n}\n.todos div {\n    margin: 20px;\n\n}\n.list div:hover {\n    background-color: red;\n}\n.views div:hover {\n    background-color: red;\n}\n.projects div:hover {\n    background-color: red;\n\n}\n#myForm {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n  #myForm2 {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,gDAAgD;AACpD;AACA;IACI,aAAa;IACb,gCAAgC;IAChC,qBAAqB;IACrB,cAAc;AAClB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kCAAkC;AACtC;AACA;;IAEI,aAAa;IACb,8BAA8B;IAC9B,YAAY;;AAEhB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,kCAAkC;AACtC;AACA;IACI,mBAAmB;IACnB,mBAAmB;IACnB,SAAS;IACT,aAAa;IACb,oCAAoC;AACxC;AACA;IACI,YAAY;AAChB;AACA;IACI,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,YAAY;;AAEhB;AACA;IACI,qBAAqB;AACzB;AACA;IACI,qBAAqB;AACzB;AACA;IACI,qBAAqB;;AAEzB;AACA;IACI,mBAAmB;IACnB,aAAa;IACb,aAAa,EAAE,sBAAsB;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,YAAY,EAAE,uBAAuB;IACrC,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,wCAAwC,EAAE,qBAAqB;EACjE;EACA;IACE,mBAAmB;IACnB,aAAa;IACb,aAAa,EAAE,sBAAsB;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,YAAY,EAAE,uBAAuB;IACrC,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,wCAAwC,EAAE,qBAAqB;EACjE",sourcesContent:["* {\n    margin: 0;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n.gridContainer {\n    display: grid;\n    grid-template-rows: 3fr 16fr 1fr;\n    grid-row: 1fr 5fr 1fr;\n    --color: brown;\n}\n.title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(65, 65, 197);\n}\n.body {\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    --color: red;\n\n}\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    display: grid;\n    background-color: rgb(65, 65, 197);\n}\n.sidebar {\n    /* padding: 20px; */\n    /* padding: 30px; */\n    gap: 50px;\n    display: grid;\n    background-color: rgb(189, 189, 200);\n}\n.sidebar div {\n    margin: 20px;\n}\n.todos {\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    /* padding: 20px; */\n}\n.todos div {\n    margin: 20px;\n\n}\n.list div:hover {\n    background-color: red;\n}\n.views div:hover {\n    background-color: red;\n}\n.projects div:hover {\n    background-color: red;\n\n}\n#myForm {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n  #myForm2 {\n    border-radius: 10px;\n    padding: 40px;\n    display: none; /* hidden by default */\n    position: fixed; /* stay in place */\n    z-index: 1; /* sit on top */\n    width: 600px; /* set the form width */\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto; /* enable scroll if needed */\n    background-color: rgb(0,0,0); /* fallback color */\n    background-color: rgba(11, 54, 225, 0.4); /* black w/ opacity */\n  }\n"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var d=0;d<e.length;d++){var s=[].concat(e[d]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),n.push(s))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var l=e[c],d=o.base?l[0]+o.base:l[0],s=a[d]||0,A="".concat(d," ").concat(s);a[d]=s+1;var u=t(A),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var f=r(p,o);o.byIndex=c,n.splice(c,0,{identifier:A,updater:f,references:1})}i.push(A)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var l=o(e,r),d=0;d<a.length;d++){var s=t(a[d]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=l}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),a=t(569),i=t.n(a),c=t(565),l=t.n(c),d=t(216),s=t.n(d),A=t(589),u=t.n(A),p=t(426),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=s(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;let C=[];const m=(e,n,t,o,r,a,i)=>({title:e,description:n,dueDate:t,priority:o,notes:a}),g=m("trash","take it out","9/2/2021","high"),h=m("eat","take it out","9/3/2021","high"),y=m("sleep","take it out","9/4/2021","high"),v=m("repeat","take it out","9/5/2021","high");console.log(C),C.push(g),C.push(h),C.push(y),C.push(v),console.log(C);const b=e=>({getTitle:()=>e});let B=()=>{for(var e=document.querySelectorAll("input"),n=0;n<e.length;n++)e[n].value="","submit"===e[n].className?e[n].value="+ New Todo":"submitProject"===e[n].className&&(e[n].value="+ New Project")};const I=document.querySelector(".form");I.addEventListener("submit",(function(e){e.preventDefault();var n=new FormData(I),t={};for(var[o,r]of n.entries())t[o]=r,console.log(t[o]);C.push(t);const a=document.querySelector(".list"),i=document.createElement("div");return i.textContent=t.title,a.appendChild(i),document.getElementById("myForm").style.display="none",B(),{todoFactory2:t}}));const x=document.querySelector(".form2");x.addEventListener("submit",(function(e){e.preventDefault();var n=new FormData(x),t={};for(var[o,r]of n.entries())t[o]=r;const a=document.querySelector(".projects"),i=document.createElement("div");i.textContent=t.title,i.className="project",a.appendChild(i),console.log("project"),console.log(t),C.push(t),document.getElementById("myForm2").style.display="none",B()}));const E=document.querySelector(".newProject");document.querySelector(".taskText"),document.querySelector(".newTodo").addEventListener("click",(()=>{console.log("test"),document.getElementById("myForm").style.display="block"})),E.addEventListener("click",(()=>{console.log("testing"),document.getElementById("myForm2").style.display="block"})),b("school"),b("finance"),b("personal"),b("social");const k=document.querySelector(".list"),w=document.querySelector(".todosHeader");let S=()=>{let e=C;console.log(e),console.log("hi"),k.textContent="",w.textContent="All Tasks",k.appendChild(w),e.forEach((function(e,n){console.log(e.title);const t=document.createElement("div");t.textContent=e.title,k.appendChild(t)}))};S(),document.querySelector(".week").addEventListener("click",(()=>{(()=>{let e=C;k.textContent="",w.textContent="Due this Week",k.appendChild(w),e.forEach((function(e,n){if(console.log(e.dueDate),"trash"===e.title){console.log(e.title),console.log("hello");const n=document.createElement("div");n.textContent=e.title,k.appendChild(n)}}))})()})),document.querySelector(".home").addEventListener("click",(()=>{S()})),document.querySelector(".month").addEventListener("click",(()=>{(()=>{let e=C;k.textContent="",w.textContent="Due this Month",k.appendChild(w),e.forEach((function(e,n){if(console.log(e.dueDate),"fog"===e.title){console.log(e.title),console.log("hello");const n=document.createElement("div");n.textContent=e.title,k.appendChild(n)}}))})()})),document.querySelector(".today").addEventListener("click",(()=>{(()=>{let e=C;k.textContent="",w.textContent="Due Today",k.appendChild(w),e.forEach((function(e,n){if(console.log(e.dueDate),"boy"===e.title){console.log(e.title),console.log("hello");const n=document.createElement("div");n.textContent=e.title,k.appendChild(n)}}))})()})),document.querySelector(".projects").addEventListener("click",(function(e){e.target.matches(".project")&&document.querySelectorAll(".project").forEach((e=>{e.addEventListener("click",(()=>{(()=>{let e=C;k.textContent="",w.textContent="Project name",k.appendChild(w),e.forEach((function(e,n){if(console.log(e.dueDate),"fog"===e.title){const n=document.createElement("div");n.textContent=e.title,k.appendChild(n)}})),console.log("working on it")})(),w.textContent=e.textContent})),console.log("hello parent")}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFVdEMsRUFDWmpILEVBQUsrSSxZQUFjLEdBQ25CTSxFQUFZTixZQUFjLGVBQzFCL0ksRUFBS3lFLFlBQVk0RSxHQUNyQkUsRUFBUUMsU0FBUSxTQUFTcEosRUFBTW1ELEdBRTdCLEdBREF1RSxRQUFRQyxJQUFJM0gsRUFBS2lILFNBQ0UsUUFBZmpILEVBQUsrRyxNQUFpQixDQUd4QixNQUFNMkIsRUFBTzlFLFNBQVNXLGNBQWMsT0FDdENtRSxFQUFLQyxZQUFjM0ksRUFBSytHLE1BQ3hCbkgsRUFBS3lFLFlBQVlxRSxFQUVqQixDQUNGLElBQ0FoQixRQUFRQyxJQUFJLGdCQUFlLEVBb0N2QitCLEdBQ0FULEVBQVlOLFlBQWNjLEVBQUlkLGVBRWhDakIsUUFBUUMsSUFBSSxlQUFjLEdBSzVCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2Rvcy8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kb3MvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG9zLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kb3MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kb3MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG9zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG9zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG9zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kb3MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2Rvcy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2Rvcy93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2Rvcy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kb3Mvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2Rvcy93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kb3MvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kb3MvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBUYWhvbWEsIHNhbnMtc2VyaWY7XFxufVxcbi5ncmlkQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzZnIgMTZmciAxZnI7XFxuICAgIGdyaWQtcm93OiAxZnIgNWZyIDFmcjtcXG4gICAgLS1jb2xvcjogYnJvd247XFxufVxcbi50aXRsZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNjUsIDY1LCAxOTcpO1xcbn1cXG4uYm9keSB7XFxuXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDRmcjtcXG4gICAgLS1jb2xvcjogcmVkO1xcblxcbn1cXG4uZm9vdGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2NSwgNjUsIDE5Nyk7XFxufVxcbi5zaWRlYmFyIHtcXG4gICAgLyogcGFkZGluZzogMjBweDsgKi9cXG4gICAgLyogcGFkZGluZzogMzBweDsgKi9cXG4gICAgZ2FwOiA1MHB4O1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTg5LCAxODksIDIwMCk7XFxufVxcbi5zaWRlYmFyIGRpdiB7XFxuICAgIG1hcmdpbjogMjBweDtcXG59XFxuLnRvZG9zIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIC8qIHBhZGRpbmc6IDIwcHg7ICovXFxufVxcbi50b2RvcyBkaXYge1xcbiAgICBtYXJnaW46IDIwcHg7XFxuXFxufVxcbi5saXN0IGRpdjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG59XFxuLnZpZXdzIGRpdjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG59XFxuLnByb2plY3RzIGRpdjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG5cXG59XFxuI215Rm9ybSB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIHBhZGRpbmc6IDQwcHg7XFxuICAgIGRpc3BsYXk6IG5vbmU7IC8qIGhpZGRlbiBieSBkZWZhdWx0ICovXFxuICAgIHBvc2l0aW9uOiBmaXhlZDsgLyogc3RheSBpbiBwbGFjZSAqL1xcbiAgICB6LWluZGV4OiAxOyAvKiBzaXQgb24gdG9wICovXFxuICAgIHdpZHRoOiA2MDBweDsgLyogc2V0IHRoZSBmb3JtIHdpZHRoICovXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiA0MCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICAgIG92ZXJmbG93OiBhdXRvOyAvKiBlbmFibGUgc2Nyb2xsIGlmIG5lZWRlZCAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwwLDApOyAvKiBmYWxsYmFjayBjb2xvciAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExLCA1NCwgMjI1LCAwLjQpOyAvKiBibGFjayB3LyBvcGFjaXR5ICovXFxuICB9XFxuICAjbXlGb3JtMiB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIHBhZGRpbmc6IDQwcHg7XFxuICAgIGRpc3BsYXk6IG5vbmU7IC8qIGhpZGRlbiBieSBkZWZhdWx0ICovXFxuICAgIHBvc2l0aW9uOiBmaXhlZDsgLyogc3RheSBpbiBwbGFjZSAqL1xcbiAgICB6LWluZGV4OiAxOyAvKiBzaXQgb24gdG9wICovXFxuICAgIHdpZHRoOiA2MDBweDsgLyogc2V0IHRoZSBmb3JtIHdpZHRoICovXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiA0MCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICAgIG92ZXJmbG93OiBhdXRvOyAvKiBlbmFibGUgc2Nyb2xsIGlmIG5lZWRlZCAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwwLDApOyAvKiBmYWxsYmFjayBjb2xvciAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExLCA1NCwgMjI1LCAwLjQpOyAvKiBibGFjayB3LyBvcGFjaXR5ICovXFxuICB9XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFNBQVM7SUFDVCxnREFBZ0Q7QUFDcEQ7QUFDQTtJQUNJLGFBQWE7SUFDYixnQ0FBZ0M7SUFDaEMscUJBQXFCO0lBQ3JCLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGtDQUFrQztBQUN0QztBQUNBOztJQUVJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsWUFBWTs7QUFFaEI7QUFDQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixrQ0FBa0M7QUFDdEM7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsU0FBUztJQUNULGFBQWE7SUFDYixvQ0FBb0M7QUFDeEM7QUFDQTtJQUNJLFlBQVk7QUFDaEI7QUFDQTtJQUNJLHVCQUF1QjtJQUN2QixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksWUFBWTs7QUFFaEI7QUFDQTtJQUNJLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0kscUJBQXFCO0FBQ3pCO0FBQ0E7SUFDSSxxQkFBcUI7O0FBRXpCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLGFBQWEsRUFBRSxzQkFBc0I7SUFDckMsZUFBZSxFQUFFLGtCQUFrQjtJQUNuQyxVQUFVLEVBQUUsZUFBZTtJQUMzQixZQUFZLEVBQUUsdUJBQXVCO0lBQ3JDLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsU0FBUztJQUNULGdDQUFnQztJQUNoQyxjQUFjLEVBQUUsNEJBQTRCO0lBQzVDLDRCQUE0QixFQUFFLG1CQUFtQjtJQUNqRCx3Q0FBd0MsRUFBRSxxQkFBcUI7RUFDakU7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsYUFBYSxFQUFFLHNCQUFzQjtJQUNyQyxlQUFlLEVBQUUsa0JBQWtCO0lBQ25DLFVBQVUsRUFBRSxlQUFlO0lBQzNCLFlBQVksRUFBRSx1QkFBdUI7SUFDckMsa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTO0lBQ1QsZ0NBQWdDO0lBQ2hDLGNBQWMsRUFBRSw0QkFBNEI7SUFDNUMsNEJBQTRCLEVBQUUsbUJBQW1CO0lBQ2pELHdDQUF3QyxFQUFFLHFCQUFxQjtFQUNqRVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBUYWhvbWEsIHNhbnMtc2VyaWY7XFxufVxcbi5ncmlkQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzZnIgMTZmciAxZnI7XFxuICAgIGdyaWQtcm93OiAxZnIgNWZyIDFmcjtcXG4gICAgLS1jb2xvcjogYnJvd247XFxufVxcbi50aXRsZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNjUsIDY1LCAxOTcpO1xcbn1cXG4uYm9keSB7XFxuXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDRmcjtcXG4gICAgLS1jb2xvcjogcmVkO1xcblxcbn1cXG4uZm9vdGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2NSwgNjUsIDE5Nyk7XFxufVxcbi5zaWRlYmFyIHtcXG4gICAgLyogcGFkZGluZzogMjBweDsgKi9cXG4gICAgLyogcGFkZGluZzogMzBweDsgKi9cXG4gICAgZ2FwOiA1MHB4O1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTg5LCAxODksIDIwMCk7XFxufVxcbi5zaWRlYmFyIGRpdiB7XFxuICAgIG1hcmdpbjogMjBweDtcXG59XFxuLnRvZG9zIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIC8qIHBhZGRpbmc6IDIwcHg7ICovXFxufVxcbi50b2RvcyBkaXYge1xcbiAgICBtYXJnaW46IDIwcHg7XFxuXFxufVxcbi5saXN0IGRpdjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG59XFxuLnZpZXdzIGRpdjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG59XFxuLnByb2plY3RzIGRpdjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG5cXG59XFxuI215Rm9ybSB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIHBhZGRpbmc6IDQwcHg7XFxuICAgIGRpc3BsYXk6IG5vbmU7IC8qIGhpZGRlbiBieSBkZWZhdWx0ICovXFxuICAgIHBvc2l0aW9uOiBmaXhlZDsgLyogc3RheSBpbiBwbGFjZSAqL1xcbiAgICB6LWluZGV4OiAxOyAvKiBzaXQgb24gdG9wICovXFxuICAgIHdpZHRoOiA2MDBweDsgLyogc2V0IHRoZSBmb3JtIHdpZHRoICovXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiA0MCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICAgIG92ZXJmbG93OiBhdXRvOyAvKiBlbmFibGUgc2Nyb2xsIGlmIG5lZWRlZCAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwwLDApOyAvKiBmYWxsYmFjayBjb2xvciAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExLCA1NCwgMjI1LCAwLjQpOyAvKiBibGFjayB3LyBvcGFjaXR5ICovXFxuICB9XFxuICAjbXlGb3JtMiB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIHBhZGRpbmc6IDQwcHg7XFxuICAgIGRpc3BsYXk6IG5vbmU7IC8qIGhpZGRlbiBieSBkZWZhdWx0ICovXFxuICAgIHBvc2l0aW9uOiBmaXhlZDsgLyogc3RheSBpbiBwbGFjZSAqL1xcbiAgICB6LWluZGV4OiAxOyAvKiBzaXQgb24gdG9wICovXFxuICAgIHdpZHRoOiA2MDBweDsgLyogc2V0IHRoZSBmb3JtIHdpZHRoICovXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiA0MCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICAgIG92ZXJmbG93OiBhdXRvOyAvKiBlbmFibGUgc2Nyb2xsIGlmIG5lZWRlZCAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwwLDApOyAvKiBmYWxsYmFjayBjb2xvciAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExLCA1NCwgMjI1LCAwLjQpOyAvKiBibGFjayB3LyBvcGFjaXR5ICovXFxuICB9XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5cbi8vIGNvbnN0IHRvZG9zTGlzdCA9ICgoKSA9PiB7XG4vLyAgICAgbGV0IHRvZG9JdGVtcyA9IFtdXG4vLyAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgdG9kb0l0ZW1zXG4vLyAgICAgfVxuLy8gfSkoKVxuXG5sZXQgdG9kb0l0ZW1zID0gW107XG5cbmNvbnN0IHRvZG9GYWN0b3J5ID0gKCh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LHByb2plY3QsIG5vdGVzLGNvbXBsZXRlKSA9PiB7XG50aXRsZSxcbmRlc2NyaXB0aW9uLFxuZHVlRGF0ZSxcbnByaW9yaXR5LFxucHJvamVjdCxcbm5vdGVzLFxuY29tcGxldGVcbnJldHVybiB7XG4gICAgdGl0bGUsXG4gICAgZGVzY3JpcHRpb24sXG4gICAgZHVlRGF0ZSxcbiAgICBwcmlvcml0eSxcbiAgICBub3Rlc1xufVxufSlcblxuY29uc3QgdGFzazEgPSB0b2RvRmFjdG9yeSAoJ3RyYXNoJywgJ3Rha2UgaXQgb3V0JywgJzkvMi8yMDIxJywgJ2hpZ2gnLCAndGVzdGluZycpXG5jb25zdCB0YXNrMiA9IHRvZG9GYWN0b3J5ICgnZWF0JywgJ3Rha2UgaXQgb3V0JywgJzkvMy8yMDIxJywgJ2hpZ2gnLCAndGVzdGluZycpXG5jb25zdCB0YXNrMyA9IHRvZG9GYWN0b3J5ICgnc2xlZXAnLCAndGFrZSBpdCBvdXQnLCAnOS80LzIwMjEnLCAnaGlnaCcsICd0ZXN0aW5nJylcbmNvbnN0IHRhc2s0ID0gdG9kb0ZhY3RvcnkgKCdyZXBlYXQnLCAndGFrZSBpdCBvdXQnLCAnOS81LzIwMjEnLCAnaGlnaCcsICd0ZXN0aW5nJylcbi8vIGNvbnNvbGUubG9nKHRvZG9zTGlzdClcbmNvbnNvbGUubG9nKHRvZG9JdGVtcylcbnRvZG9JdGVtcy5wdXNoKHRhc2sxKVxudG9kb0l0ZW1zLnB1c2godGFzazIpXG50b2RvSXRlbXMucHVzaCh0YXNrMylcbnRvZG9JdGVtcy5wdXNoKHRhc2s0KVxuLy8gY29uc29sZS5sb2codG9kb3NMaXN0KVxuY29uc29sZS5sb2codG9kb0l0ZW1zKVxuXG5cbmNvbnN0IG1ha2VQcm9qZWN0ID0gKCAodGl0bGUpID0+IHtcbiAgICB0aXRsZVxuICAgIHJldHVybiB7XG4gICAgICAgIGdldFRpdGxlOiAoKSA9PiB0aXRsZSxcbiAgICB9XG59KVxuXG5sZXQgc2hvd0Zvcm0gPSAoKSA9PiB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJteUZvcm1cIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgfVxubGV0IGhpZGVGb3JtID0gKCkgPT4ge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlGb3JtXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgfVxuICBsZXQgc2hvd0Zvcm0yID0gKCkgPT4ge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlGb3JtMlwiKS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICB9XG5sZXQgaGlkZUZvcm0yID0gKCkgPT4ge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlGb3JtMlwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIH1cblxuICBsZXQgY2xlYXJGb3JtID0gKCkgPT4ge1xuICAgIHZhciBpbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRcIik7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbnB1dHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlucHV0c1tpXS52YWx1ZSA9IFwiXCJcbiAgICAgIGlmIChpbnB1dHNbaV0uY2xhc3NOYW1lID09PSAnc3VibWl0Jykge1xuICAgICAgICBpbnB1dHNbaV0udmFsdWUgPSAnKyBOZXcgVG9kbydcbiAgICAgIH0gZWxzZSBpZiAoaW5wdXRzW2ldLmNsYXNzTmFtZSA9PT0gJ3N1Ym1pdFByb2plY3QnKSB7XG4gICAgICAgIGlucHV0c1tpXS52YWx1ZSA9ICcrIE5ldyBQcm9qZWN0J1xuICAgICAgfVxuXG59XG4gIH1cbmxldCBhZGRGb3JtSW5wdXRzID0gKCkgPT4ge1xuICBwcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShmb3JtKTtcbiAgICB2YXIgdG9kb0ZhY3RvcnkyID0ge307XG4gICAgZm9yICh2YXIgW2tleSwgdmFsdWVdIG9mIGZvcm1EYXRhLmVudHJpZXMoKSkge1xuICAgICAgdG9kb0ZhY3RvcnkyW2tleV0gPSB2YWx1ZTtcbiAgICAgIGNvbnNvbGUubG9nKHRvZG9GYWN0b3J5MltrZXldKVxuICAgIH1cblxufVxuXG5cbmNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybScpXG5mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShmb3JtKTtcbiAgICB2YXIgdG9kb0ZhY3RvcnkyID0ge307XG4gICAgZm9yICh2YXIgW2tleSwgdmFsdWVdIG9mIGZvcm1EYXRhLmVudHJpZXMoKSkge1xuICAgICAgdG9kb0ZhY3RvcnkyW2tleV0gPSB2YWx1ZTtcbiAgICAgIGNvbnNvbGUubG9nKHRvZG9GYWN0b3J5MltrZXldKVxuICAgIH1cblxuICAgIHRvZG9JdGVtcy5wdXNoKHRvZG9GYWN0b3J5MilcbiAgY29uc3QgbGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5saXN0JylcbiAgY29uc3QgdG9kbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgdG9kby50ZXh0Q29udGVudCA9IHRvZG9GYWN0b3J5Mi50aXRsZVxuICAgIGxpc3QuYXBwZW5kQ2hpbGQodG9kbylcbiAgICBoaWRlRm9ybSgpXG4gICAgY2xlYXJGb3JtKClcblxuICAgIHJldHVybiB7XG4gICAgICB0b2RvRmFjdG9yeTJcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IGZvcm0yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm0yJylcbiAgZm9ybTIuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBmdW5jdGlvbihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKGZvcm0yKTtcbiAgICB2YXIgdG9kb0ZhY3RvcnkyID0ge307XG4gICAgZm9yICh2YXIgW2tleSwgdmFsdWVdIG9mIGZvcm1EYXRhLmVudHJpZXMoKSkge1xuICAgICAgdG9kb0ZhY3RvcnkyW2tleV0gPSB2YWx1ZTtcbiAgICB9XG5cbiAgY29uc3QgcHJvamVjdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdHMnKVxuICBjb25zdCBwcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICBwcm9qZWN0LnRleHRDb250ZW50ID0gdG9kb0ZhY3RvcnkyLnRpdGxlXG4gICAgcHJvamVjdC5jbGFzc05hbWUgPSAncHJvamVjdCdcbiAgICBwcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0KVxuICAgIGNvbnNvbGUubG9nKCdwcm9qZWN0JylcbiAgICBjb25zb2xlLmxvZyh0b2RvRmFjdG9yeTIpXG4gICAgdG9kb0l0ZW1zLnB1c2godG9kb0ZhY3RvcnkyKVxuICAgIGhpZGVGb3JtMigpXG4gICAgY2xlYXJGb3JtKClcbiAgfSk7XG5cblxuXG5cblxuY29uc3QgbmV3UHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXdQcm9qZWN0JylcbmNvbnN0IHRhc2tUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhc2tUZXh0JylcbmNvbnN0IG5ld1RvZG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV3VG9kbycpXG5uZXdUb2RvLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PiB7XG4gICAgY29uc29sZS5sb2coJ3Rlc3QnKVxuICAgIHNob3dGb3JtKClcbn0pXG5uZXdQcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PiB7XG4gICAgY29uc29sZS5sb2coJ3Rlc3RpbmcnKVxuICAgIHNob3dGb3JtMigpXG59KVxuY29uc3Qgc2Nob29sID0gbWFrZVByb2plY3QgKCdzY2hvb2wnKVxuY29uc3QgZmluYW5jZSA9IG1ha2VQcm9qZWN0ICgnZmluYW5jZScpXG5jb25zdCBwZXJzb25hbCA9IG1ha2VQcm9qZWN0ICgncGVyc29uYWwnKVxuY29uc3Qgc29jaWFsID0gbWFrZVByb2plY3QgKCdzb2NpYWwnKVxuXG5jb25zdCBsaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxpc3QnKVxuY29uc3QgdG9kb3NIZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kb3NIZWFkZXInKVxuXG5cbmxldCBzaG93VGFza3NPblBhZ2UgPSAoKSA9PiB7XG4gICAgbGV0IG15QXJyYXkgPSB0b2RvSXRlbXNcbiAgICBjb25zb2xlLmxvZyhteUFycmF5KVxuICAgIGNvbnNvbGUubG9nKCdoaScpXG4gICAgbGlzdC50ZXh0Q29udGVudCA9ICcnXG4gICAgdG9kb3NIZWFkZXIudGV4dENvbnRlbnQgPSAnQWxsIFRhc2tzJ1xuICAgIGxpc3QuYXBwZW5kQ2hpbGQodG9kb3NIZWFkZXIpXG5cbm15QXJyYXkuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuICBjb25zb2xlLmxvZyhpdGVtLnRpdGxlKTtcbmNvbnN0IHRvZG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICB0b2RvLnRleHRDb250ZW50ID0gaXRlbS50aXRsZVxuICBsaXN0LmFwcGVuZENoaWxkKHRvZG8pXG59KTtcbn1cbnNob3dUYXNrc09uUGFnZSgpXG5cbmxldCBzaG93c1Rhc2tmb3JXZWVrID0gKCkgPT4ge1xuICBsZXQgbXlBcnJheSA9IHRvZG9JdGVtc1xuICAgIGxpc3QudGV4dENvbnRlbnQgPSAnJ1xuICAgIHRvZG9zSGVhZGVyLnRleHRDb250ZW50ID0gJ0R1ZSB0aGlzIFdlZWsnXG4gICAgbGlzdC5hcHBlbmRDaGlsZCh0b2Rvc0hlYWRlcilcbm15QXJyYXkuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuICBjb25zb2xlLmxvZyhpdGVtLmR1ZURhdGUpO1xuICBpZiAoaXRlbS50aXRsZSA9PT0gJ3RyYXNoJykge1xuICAgIGNvbnNvbGUubG9nKGl0ZW0udGl0bGUpXG4gICAgY29uc29sZS5sb2coJ2hlbGxvJylcbiAgICBjb25zdCB0b2RvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgdG9kby50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGVcbiAgbGlzdC5hcHBlbmRDaGlsZCh0b2RvKVxuICB9XG59KTtcblxufVxuXG5sZXQgc2hvd3NUYXNrZm9yVG9kYXkgPSAoKSA9PiB7XG4gIGxldCBteUFycmF5ID0gdG9kb0l0ZW1zXG4gICAgbGlzdC50ZXh0Q29udGVudCA9ICcnXG4gICAgdG9kb3NIZWFkZXIudGV4dENvbnRlbnQgPSAnRHVlIFRvZGF5J1xuICAgIGxpc3QuYXBwZW5kQ2hpbGQodG9kb3NIZWFkZXIpXG5teUFycmF5LmZvckVhY2goZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcbiAgY29uc29sZS5sb2coaXRlbS5kdWVEYXRlKTtcbiAgaWYgKGl0ZW0udGl0bGUgPT09ICdib3knKSB7XG4gICAgY29uc29sZS5sb2coaXRlbS50aXRsZSlcbiAgICBjb25zb2xlLmxvZygnaGVsbG8nKVxuICAgIGNvbnN0IHRvZG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICB0b2RvLnRleHRDb250ZW50ID0gaXRlbS50aXRsZVxuICBsaXN0LmFwcGVuZENoaWxkKHRvZG8pXG4gIH1cbn0pO1xuXG59XG5cbmxldCBzaG93c1Rhc2tmb3JNb250aCA9ICgpID0+IHtcbiAgbGV0IG15QXJyYXkgPSB0b2RvSXRlbXNcbiAgICBsaXN0LnRleHRDb250ZW50ID0gJydcbiAgICB0b2Rvc0hlYWRlci50ZXh0Q29udGVudCA9ICdEdWUgdGhpcyBNb250aCdcbiAgICBsaXN0LmFwcGVuZENoaWxkKHRvZG9zSGVhZGVyKVxubXlBcnJheS5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XG4gIGNvbnNvbGUubG9nKGl0ZW0uZHVlRGF0ZSk7XG4gIGlmIChpdGVtLnRpdGxlID09PSAnZm9nJykge1xuICAgIGNvbnNvbGUubG9nKGl0ZW0udGl0bGUpXG4gICAgY29uc29sZS5sb2coJ2hlbGxvJylcbiAgICBjb25zdCB0b2RvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgdG9kby50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGVcbiAgbGlzdC5hcHBlbmRDaGlsZCh0b2RvKVxuXG4gIH1cbn0pO1xufVxuXG5sZXQgc2hvd3NUYXNrZm9yUHJvamVjdCA9ICgpID0+IHtcbiAgbGV0IG15QXJyYXkgPSB0b2RvSXRlbXNcbiAgICBsaXN0LnRleHRDb250ZW50ID0gJydcbiAgICB0b2Rvc0hlYWRlci50ZXh0Q29udGVudCA9ICdQcm9qZWN0IG5hbWUnXG4gICAgbGlzdC5hcHBlbmRDaGlsZCh0b2Rvc0hlYWRlcilcbm15QXJyYXkuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuICBjb25zb2xlLmxvZyhpdGVtLmR1ZURhdGUpO1xuICBpZiAoaXRlbS50aXRsZSA9PT0gJ2ZvZycpIHtcbiAgICAvLyBjb25zb2xlLmxvZyhpdGVtLnRpdGxlKVxuICAgIC8vIGNvbnNvbGUubG9nKCdoZWxsbycpXG4gICAgY29uc3QgdG9kbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gIHRvZG8udGV4dENvbnRlbnQgPSBpdGVtLnRpdGxlXG4gIGxpc3QuYXBwZW5kQ2hpbGQodG9kbylcblxuICB9XG59KTtcbmNvbnNvbGUubG9nKCd3b3JraW5nIG9uIGl0Jylcbn1cblxuXG5jb25zdCB3ZWVrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndlZWsnKVxud2Vlay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgc2hvd3NUYXNrZm9yV2VlaygpXG59KVxuY29uc3QgaG9tZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ob21lJylcbmhvbWUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIHNob3dUYXNrc09uUGFnZSgpXG59KVxuY29uc3QgbW9udGggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9udGgnKVxubW9udGguYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIHNob3dzVGFza2Zvck1vbnRoKClcbn0pXG5jb25zdCB0b2RheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RheScpXG50b2RheS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgc2hvd3NUYXNrZm9yVG9kYXkoKVxufSlcblxuXG4vLyBjb25zdCBwcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnByb2plY3QnKVxuXG5cblxuXG5jb25zdCBwYXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdHMnKTtcblxuXG5wYXJlbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuICBpZiAoZXZlbnQudGFyZ2V0Lm1hdGNoZXMoJy5wcm9qZWN0JykpIHtcbiAgICBjb25zdCBkaXZzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnByb2plY3QnKTtcbiAgZGl2cy5mb3JFYWNoKGRpdiA9PiB7XG4gIGRpdi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+XG4gIHtcbiAgICBzaG93c1Rhc2tmb3JQcm9qZWN0KClcbiAgICB0b2Rvc0hlYWRlci50ZXh0Q29udGVudCA9IGRpdi50ZXh0Q29udGVudFxuICB9KTtcbiAgY29uc29sZS5sb2coJ2hlbGxvIHBhcmVudCcpXG59KTtcblxuXG4gIH1cbn0pO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsInRvZG9JdGVtcyIsInRvZG9GYWN0b3J5IiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImR1ZURhdGUiLCJwcmlvcml0eSIsInByb2plY3QiLCJub3RlcyIsImNvbXBsZXRlIiwidGFzazEiLCJ0YXNrMiIsInRhc2szIiwidGFzazQiLCJjb25zb2xlIiwibG9nIiwibWFrZVByb2plY3QiLCJnZXRUaXRsZSIsImNsZWFyRm9ybSIsImlucHV0cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ2YWx1ZSIsImNsYXNzTmFtZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsInRvZG9GYWN0b3J5MiIsImVudHJpZXMiLCJ0b2RvIiwidGV4dENvbnRlbnQiLCJnZXRFbGVtZW50QnlJZCIsImRpc3BsYXkiLCJmb3JtMiIsInByb2plY3RzIiwibmV3UHJvamVjdCIsInRvZG9zSGVhZGVyIiwic2hvd1Rhc2tzT25QYWdlIiwibXlBcnJheSIsImZvckVhY2giLCJzaG93c1Rhc2tmb3JXZWVrIiwic2hvd3NUYXNrZm9yTW9udGgiLCJzaG93c1Rhc2tmb3JUb2RheSIsIm1hdGNoZXMiLCJkaXYiLCJzaG93c1Rhc2tmb3JQcm9qZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==